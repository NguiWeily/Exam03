Assignment name  : ft_atoi
Expected files   : ft_atoi.c
Allowed functions: None
--------------------------------------------------------------------------------

Write a function that converts the string argument str to an integer (type int)
and returns it.

It works much like the standard atoi(const char *str) function, see the man.

Your function must be declared as follows:

int	ft_atoi(const char *str);

Certainly! Here's an implementation of the `ft_atoi` function in C:

```c
int ft_atoi(const char *str) {
    int result = 0;
    int sign = 1;
    int i = 0;

    // Skip leading whitespace
    while (str[i] == ' ' || str[i] == '\t' || str[i] == '\n' ||
           str[i] == '\v' || str[i] == '\f' || str[i] == '\r') {
        i++;
    }

    // Check for sign
    if (str[i] == '-' || str[i] == '+') {
        sign = (str[i] == '-') ? -1 : 1;
        i++;
    }

    // Convert digits to integer
    while (str[i] >= '0' && str[i] <= '9') {
        result = result * 10 + (str[i] - '0');
        i++;
    }

    return result * sign;
}
```

The `ft_atoi` function converts the string `str` to an integer and returns the result. It mimics the behavior of the standard `atoi` function.

The function skips any leading whitespace characters and checks for an optional sign character (`+` or `-`). It then iterates through the string, converting consecutive digits to an integer value by accumulating them in the `result` variable.

Make sure to include the necessary header files and declare the function prototype before using the `ft_atoi` function in your code.
