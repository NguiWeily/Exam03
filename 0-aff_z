Assignment name  : aff_z
Expected files   : aff_z.c
Allowed functions: write
--------------------------------------------------------------------------------

Write a program that takes a string, and displays the first 'z'
character it encounters in it, followed by a newline. If there are no
'z' characters in the string, the program writes 'z' followed
by a newline. If the number of parameters is not 1, the program displays
'z' followed by a newline.

Example:

$> ./aff_z "abc" | cat -e
z$
$> ./aff_z "dubO a POIL" | cat -e
z$
$> ./aff_z "zaz sent le poney" | cat -e
z$
$> ./aff_z | cat -e
z$

Certainly! Here's an implementation of the `aff_z` program in C:

```c
#include <unistd.h>

int main(int argc, char* argv[]) {
    if (argc != 2) {
        write(1, "z\n", 2);
        return 0;
    }

    char* str = argv[1];
    while (*str) {
        if (*str == 'z') {
            write(1, "z\n", 2);
            return 0;
        }
        str++;
    }

    write(1, "z\n", 2);
    return 0;
}
```

Save the above code in a file named `aff_z.c`. The `aff_z` program takes a string as a command-line argument and displays the first 'z' character it encounters, followed by a newline. If there are no 'z' characters in the string or if the number of command-line arguments is not 1, the program writes 'z' followed by a newline.

You can compile the code using a C compiler, and then run the resulting executable file, providing a string argument. The output will be the first 'z' character encountered in the string or 'z' if no 'z' character is present.
