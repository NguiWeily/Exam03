Assignment name  : aff_last_param
Expected files   : aff_last_param.c
Allowed functions: write
--------------------------------------------------------------------------------

Write a program that takes strings as arguments, and displays its last
argument followed by a newline.

If the number of arguments is less than 1, the program displays a newline.

Examples:

$> ./aff_last_param "zaz" "mange" "des" "chats" | cat -e
chats$
$> ./aff_last_param "j'aime le savon" | cat -e
j'aime le savon$
$> ./aff_last_param
$

Certainly! Here's an implementation of the `aff_last_param` program in C:

```c
#include <unistd.h>

int main(int argc, char* argv[]) {
    if (argc < 2) {
        write(1, "\n", 1);
    } else {
        int lastArgIndex = argc - 1;
        char* lastArg = argv[lastArgIndex];
        while (*lastArg) {
            write(1, lastArg, 1);
            lastArg++;
        }
        write(1, "\n", 1);
    }

    return 0;
}
```

Save the above code in a file named `aff_last_param.c`. The `aff_last_param` program takes strings as command-line arguments and displays the last argument followed by a newline. If the number of arguments is less than 1, the program displays a newline.

Here's an example usage of the `aff_last_param` program:

```
$ ./aff_last_param "zaz" "mange" "des" "chats"
chats
$ ./aff_last_param "j'aime le savon"
j'aime le savon
$ ./aff_last_param

$
```

You can compile the code using a C compiler, and then run the resulting executable file with the desired command-line arguments. The output will be the last argument provided, followed by a newline.
